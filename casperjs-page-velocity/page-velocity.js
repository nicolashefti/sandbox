// Generated by CoffeeScript 1.10.0
(function() {
  var casper, domElements, end, iterations, loadTimes, page, start, utils;

  utils = require('utils');

  casper = require('casper').create({
    verbose: true
  });

  start = 0;

  end = 0;

  iterations = casper.cli.get('it') || 10;

  loadTimes = [];

  domElements = [];

  page = casper.cli.get('page');

  casper.on('page.resource.requested', function(requestData, request) {
    return start = new Date().getTime();
  });

  casper.on('page.resource.received', function(response) {
    var loadTime;
    end = new Date().getTime();
    loadTime = end - start;
    loadTimes.push(loadTime);
    return this.echo("Page load time " + loadTime + "ms");
  });

  if (!page) {
    casper.log('Please provide page parameter: --page=www.pagetotest.com', 'error');
    casper.exit();
  } else {
    page = 'http://' + page;
  }

  casper.start();

  casper.then(function() {
    var i, j, ref, results;
    results = [];
    for (i = j = 1, ref = iterations; 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {
      results.push(this.thenOpen(page, function() {
        return domElements.push(this.evaluate(function() {
          return document.getElementsByTagName('*').length;
        }));
      }));
    }
    return results;
  });

  casper.then(function() {
    var averageElements, averageTime;
    averageTime = Math.round((loadTimes.reduce(function(x, y) {
      return x + y;
    })) / iterations);
    averageElements = Math.round((domElements.reduce(function(x, y) {
      return x + y;
    })) / iterations);
    return casper.echo("--> Average load time: " + averageTime + "ms | Average DOM elements: " + averageElements);
  });

  casper.run();

}).call(this);
